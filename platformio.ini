; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
monitor_speed=115200
build_flags = 
  -D BAUD_RATE=${env.monitor_speed}
  -D ENABLE_SECURE_READ_WRITE=false
  -D ENABLE_LASER_SAFE_MODE=true
  -D ZENOH_MODE='"client"'
  -D LOCATOR='""'
  -D LOG_LEVEL=0
  -D ZENOH_COMPILER_GCC
  -D Z_FEATURE_LINK_SERIAL=1
  -D ZENOH_DEBUG=3
  -std=gnu++17
build_unflags = 
  -std=gnu++11
lib_deps = 
    https://github.com/eclipse-zenoh/zenoh-pico
    https://github.com/Schmidt-jan/Ros2Msg
    git@github.com:Schmidt-jan/PAA5102E1.git	


[env:mkrwifi1010]
platform = atmelsam
board = mkrwifi1010
framework = arduino
build_flags = 
    ${env.build_flags}
    -D BOARD=0
    -DZENOH_GENERIC=1
    -Iprintf
lib_deps =
    ${env.lib_deps}
  	arduino-libraries/WiFiNINA@^1.8.13
    https://github.com/mpaland/printf
extra_scripts =
    pre:set_library_vars.py  # Sets env variables


[env:opencr]
platform = ststm32
board = opencr
framework = arduino
build_flags = 
    ${env.build_flags}
    -D BOARD=1
    -D ZENOH_ARDUINO_OPENCR
lib_deps =
    ${env.lib_deps}
    armmbed/cmsis-core@^1.2.0
  

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino
board_build.f_cpu = 80000000L
build_flags = 
    -D ZENOH_ARDUINO_ESP32
    -D ZENOH_DEBUG=3
    -D ZENOH_COMPILER_GCC
    -D BOARD=2
  -std=gnu++17
  
build_unflags = 
  -std=gnu++11
board_build.cmake_extra_args=
     -DZ_FEATURE_LINK_SERIAL=1

lib_deps = 
    https://github.com/eclipse-zenoh/zenoh-pico